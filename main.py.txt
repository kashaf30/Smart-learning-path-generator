from fastapi import FastAPI
from neo4j import GraphDatabase

# Neo4j Connection - Direct values
URI = "neo4j+s://69d4721d.databases.neo4j.io"
USER = "neo4j"
PASSWORD = "4dTFbCGG-FLCnn0pVcAGy6qgmMq9IWpizgGQnxarvKk"

# Create driver
driver = GraphDatabase.driver(URI, auth=(USER, PASSWORD))

app = FastAPI()

@app.get("/")
def root():
    return {"message": "Neo4j + FastAPI is working!"}

@app.get("/test-db")
def test_db():
    try:
        with driver.session() as session:
            result = session.run("RETURN 'Neo4j Connection Successful!' AS message")
            return {"message": result.single()["message"]}
    except Exception as e:
        return {"error": str(e)}

@app.get("/create-user/{name}")
def create_user(name: str):
    try:
        with driver.session() as session:
            query = "CREATE (u:User {name: $name}) RETURN u.name AS user_name"
            result = session.run(query, name=name)
            return {"message": f"User created: {result.single()['user_name']}"}
    except Exception as e:
        return {"error": str(e)}

@app.get("/get-users")
def get_users():
    try:
        with driver.session() as session:
            result = session.run("MATCH (u:User) RETURN u.name AS name")
            users = [record["name"] for record in result]
            return {"users": users}
    except Exception as e:
        return {"error": str(e)}